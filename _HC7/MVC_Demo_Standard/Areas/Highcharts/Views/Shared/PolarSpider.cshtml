<script src="http://code.highcharts.com/highcharts.js"></script>


@*The highchart-more.js file contains definitions for additional chart types not available
    in the main highcharts.js file such as "arearange". You need to include this file if you
    are using these types of charts*@

<script src="http://code.highcharts.com/highcharts-more.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>

@using Highsoft.Web.Mvc.Charts
@using Highsoft.Web.Mvc.Charts.Rendering

@(Html.Highsoft().GetHighcharts(
    new Highcharts
    {
        Chart = new Highsoft.Web.Mvc.Charts.Chart
        {
            new Highcharts
            {
                Chart = new Highsoft.Web.Mvc.Charts.Chart
                {
                    Polar = true
                },
                Title = new Title
                {
                    Text = "Budget vs spending",
                    X = -80
                },
                    new = new Pane
                {
                    Size = "80%"
                },
                    Categories = new List<string> {"Sales", "Marketing", "Development", "Customer Support",
                    "Information Technology", "Administration" },
                    TickmarkPlacement = XAxisTickmarkPlacement.On,
                    LineWidth = 0
                }
                        },
                    new List<YAxis>
                {
                new YAxis
                {
                    GridLineInterpolation = YAxisGridLineInterpolation.Polygon,
                    LineWidth = 0,
                    Min = 0
                }
            },
            new Tooltip
            {
                Name = "<span style=\"color:{series.color}\">{series.name}: <b>${point.y:,.0f}</b><br/>"
                },
                Legend = new Legend
                {
                    Align = LegendAlign.Right,
                    VerticalAlign = LegendVerticalAlign.Top,
                    Y = 70,
                    Layout = LegendLayout.Vertical
                },
                Series = new List<Series>
                {
                new LineSeries
                {
                    Name = "Allocated Budget",
                    PointPlacement = new PointPlacement
                    {
                        PointPlacementEnum = PointPlacementEnum.On
                },
                new LineSeries
                {
                    Name = "Actual Spending",
                    PointPlacement = new PointPlacement
                    {
                        PointPlacementEnum = PointPlacementEnum.On
                    },
                    Data = new List<LineSeriesData> {
                    new LineSeriesData { Y = 50000 },
                    new LineSeriesData { Y = 39000 },
                    new LineSeriesData { Y = 42000 },
                    new LineSeriesData { Y = 31000 },
                    new LineSeriesData { Y = 26000 },
                    new LineSeriesData { Y = 14000 }
                }
            }
        }
    }
    , "chart")
)